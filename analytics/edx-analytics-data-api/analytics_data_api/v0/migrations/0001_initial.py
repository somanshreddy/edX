# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2019-06-17 10:52
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProblemResponseAnswerDistribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('module_id', models.CharField(db_index=True, max_length=255)),
                ('part_id', models.CharField(db_index=True, max_length=255)),
                ('correct', models.NullBooleanField()),
                ('value_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('answer_value', models.TextField(db_column=b'answer_value_text', null=True)),
                ('variant', models.IntegerField(null=True)),
                ('problem_display_name', models.TextField(null=True)),
                ('question_text', models.TextField(null=True)),
                ('count', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'db_table': 'answer_distribution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseActivityByGender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('interval_start', models.DateTimeField()),
                ('interval_end', models.DateTimeField(db_index=True)),
                ('activity_type', models.CharField(db_column=b'label', db_index=True, max_length=255)),
                ('count', models.IntegerField()),
                ('gender', models.CharField(db_column=b'gender', max_length=255, null=True)),
            ],
            options={
                'managed': True,
                'ordering': ('interval_end', 'interval_start', 'course_id', 'gender'),
                'abstract': False,
                'db_table': 'course_activity_gender',
            },
        ),
        migrations.CreateModel(
            name='CourseActivityWeekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('interval_start', models.DateTimeField()),
                ('interval_end', models.DateTimeField(db_index=True)),
                ('activity_type', models.CharField(db_column=b'label', db_index=True, max_length=255)),
                ('count', models.IntegerField()),
            ],
            options={
                'get_latest_by': 'interval_end',
                'managed': True,
                'ordering': ('interval_end', 'interval_start', 'course_id'),
                'abstract': False,
                'db_table': 'course_activity',
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollmentByBirthYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(db_index=True)),
                ('count', models.IntegerField()),
                ('birth_year', models.IntegerField()),
            ],
            options={
                'get_latest_by': 'date',
                'managed': True,
                'ordering': ('date', 'course_id', 'birth_year'),
                'abstract': False,
                'db_table': 'course_enrollment_birth_year_daily',
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollmentByCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(db_index=True)),
                ('count', models.IntegerField()),
                ('country_code', models.CharField(db_column=b'country_code', max_length=255)),
            ],
            options={
                'get_latest_by': 'date',
                'managed': True,
                'ordering': ('date', 'course_id', 'country_code'),
                'abstract': False,
                'db_table': 'course_enrollment_location_current',
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollmentByEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(db_index=True)),
                ('count', models.IntegerField()),
                ('education_level', models.CharField(max_length=255, null=True)),
            ],
            options={
                'get_latest_by': 'date',
                'managed': True,
                'ordering': ('date', 'course_id', 'education_level'),
                'abstract': False,
                'db_table': 'course_enrollment_education_level_daily',
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollmentByGender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(db_index=True)),
                ('count', models.IntegerField()),
                ('gender', models.CharField(db_column=b'gender', max_length=255, null=True)),
            ],
            options={
                'get_latest_by': 'date',
                'managed': True,
                'ordering': ('date', 'course_id', 'gender'),
                'abstract': False,
                'db_table': 'course_enrollment_gender_daily',
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollmentDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(db_index=True)),
                ('count', models.IntegerField()),
            ],
            options={
                'get_latest_by': 'date',
                'managed': True,
                'ordering': ('date', 'course_id'),
                'abstract': False,
                'db_table': 'course_enrollment_daily',
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollmentModeDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(db_index=True)),
                ('count', models.IntegerField()),
                ('mode', models.CharField(max_length=255)),
                ('cumulative_count', models.IntegerField()),
            ],
            options={
                'get_latest_by': 'date',
                'managed': True,
                'ordering': ('date', 'course_id', 'mode'),
                'abstract': False,
                'db_table': 'course_enrollment_mode_daily',
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollmentModeDailyTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(db_index=True)),
                ('count', models.IntegerField()),
                ('mode', models.CharField(max_length=255)),
                ('cumulative_count', models.IntegerField()),
            ],
            options={
                'get_latest_by': 'date',
                'managed': True,
                'ordering': ('date', 'course_id', 'mode'),
                'abstract': False,
                'db_table': 'course_enrollment_mode_daily_test',
            },
        ),
        migrations.CreateModel(
            name='CourseMetaSummaryEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('catalog_course_title', models.CharField(db_index=True, max_length=255)),
                ('catalog_course', models.CharField(db_index=True, max_length=255)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('pacing_type', models.CharField(db_index=True, max_length=255)),
                ('availability', models.CharField(db_index=True, max_length=255)),
                ('enrollment_mode', models.CharField(max_length=255)),
                ('count', models.IntegerField()),
                ('cumulative_count', models.IntegerField()),
                ('count_change_7_days', models.IntegerField(default=0)),
                ('passing_users', models.IntegerField(default=0)),
            ],
            options={
                'managed': True,
                'ordering': ('course_id',),
                'abstract': False,
                'db_table': 'course_meta_summary_enrollment',
            },
        ),
        migrations.CreateModel(
            name='CourseProgramMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('program_id', models.CharField(db_index=True, max_length=255)),
                ('program_type', models.CharField(db_index=True, max_length=255)),
                ('program_title', models.CharField(max_length=255)),
            ],
            options={
                'managed': True,
                'ordering': ('program_id',),
                'abstract': False,
                'db_table': 'course_program_metadata',
            },
        ),
        migrations.CreateModel(
            name='GradeDistribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('module_id', models.CharField(db_index=True, max_length=255)),
                ('grade', models.IntegerField()),
                ('max_grade', models.IntegerField()),
                ('count', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'db_table': 'grade_distribution',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ModuleEngagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('username', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('entity_type', models.CharField(max_length=255)),
                ('entity_id', models.CharField(max_length=255)),
                ('event', models.CharField(max_length=255)),
                ('count', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'db_table': 'module_engagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ModuleEngagementMetricRanges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('metric', models.CharField(max_length=50)),
                ('range_type', models.CharField(max_length=50)),
                ('high_value', models.FloatField()),
                ('low_value', models.FloatField()),
            ],
            options={
                'abstract': False,
                'db_table': 'module_engagement_metric_ranges',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProblemFirstLastResponseAnswerDistribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('module_id', models.CharField(db_index=True, max_length=255)),
                ('part_id', models.CharField(db_index=True, max_length=255)),
                ('correct', models.NullBooleanField()),
                ('value_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('answer_value', models.TextField(db_column=b'answer_value_text', null=True)),
                ('variant', models.IntegerField(null=True)),
                ('problem_display_name', models.TextField(null=True)),
                ('question_text', models.TextField(null=True)),
                ('first_response_count', models.IntegerField()),
                ('last_response_count', models.IntegerField()),
            ],
            options={
                'verbose_name': 'first_last_answer_distribution',
                'abstract': False,
                'db_table': 'answer_distribution',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProblemsAndTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('module_id', models.CharField(db_index=True, max_length=255)),
                ('tag_name', models.CharField(max_length=255)),
                ('tag_value', models.CharField(max_length=255)),
                ('total_submissions', models.IntegerField(default=0)),
                ('correct_submissions', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
                'db_table': 'tags_distribution',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SequentialOpenDistribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('module_id', models.CharField(db_index=True, max_length=255)),
                ('count', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'db_table': 'sequential_open_distribution',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_video_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('encoded_module_id', models.CharField(db_index=True, max_length=255)),
                ('duration', models.IntegerField()),
                ('segment_length', models.IntegerField()),
                ('users_at_start', models.IntegerField()),
                ('users_at_end', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'db_table': 'video',
            },
        ),
        migrations.CreateModel(
            name='VideoTimeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_video_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('segment', models.IntegerField()),
                ('num_users', models.IntegerField()),
                ('num_views', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'db_table': 'video_timeline',
            },
        ),
        migrations.AlterUniqueTogether(
            name='courseprogrammetadata',
            unique_together=set([('course_id', 'program_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='coursemetasummaryenrollment',
            unique_together=set([('course_id', 'enrollment_mode')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollmentmodedailytest',
            unique_together=set([('course_id', 'date', 'mode')]),
        ),
        migrations.AlterIndexTogether(
            name='courseenrollmentmodedailytest',
            index_together=set([('course_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollmentmodedaily',
            unique_together=set([('course_id', 'date', 'mode')]),
        ),
        migrations.AlterIndexTogether(
            name='courseenrollmentmodedaily',
            index_together=set([('course_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollmentdaily',
            unique_together=set([('course_id', 'date')]),
        ),
        migrations.AlterIndexTogether(
            name='courseenrollmentdaily',
            index_together=set([('course_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollmentbygender',
            unique_together=set([('course_id', 'date', 'gender')]),
        ),
        migrations.AlterIndexTogether(
            name='courseenrollmentbygender',
            index_together=set([('course_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollmentbyeducation',
            unique_together=set([('course_id', 'date', 'education_level')]),
        ),
        migrations.AlterIndexTogether(
            name='courseenrollmentbyeducation',
            index_together=set([('course_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollmentbycountry',
            unique_together=set([('course_id', 'date', 'country_code')]),
        ),
        migrations.AlterIndexTogether(
            name='courseenrollmentbycountry',
            index_together=set([('course_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollmentbybirthyear',
            unique_together=set([('course_id', 'date', 'birth_year')]),
        ),
        migrations.AlterIndexTogether(
            name='courseenrollmentbybirthyear',
            index_together=set([('course_id', 'date')]),
        ),
        migrations.AlterIndexTogether(
            name='courseactivityweekly',
            index_together=set([('course_id', 'activity_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseactivitybygender',
            unique_together=set([('course_id', 'interval_end', 'interval_start', 'gender')]),
        ),
    ]
